type Query {
    entities(type: String!): [Entity!]!
    contacts: [Contact!]!
    layouts(entityType: String!, types: [String!]): LayoutResponse!
}

type Entity {
    id: ID!
    type: String!
    properties: [EntityProperty!]!
}

type EntityProperty {
    name: String!
    typeName: String!
    value: String!
}

type Property {
    id: ID!
    name: String
    label: String
    pluralLabel: String
    description: String
    type: PropertyType
}

type PropertyType {
    name: String
    label: String
    semanticType: String
    wireType: String
    isNumeric: Boolean
    isTimestamp: Boolean
}

union AnyWidget = Widget | GroupWidget | PropertyWidget

interface IWidget {
    type: String!
    label: String
    hideLabel: Boolean
    displayOrder: Int
}

type Widget implements IWidget {
    type: String!
    label: String
    hideLabel: Boolean
    displayOrder: Int
}

type GroupWidget implements IWidget {
    type: String!
    label: String
    hideLabel: Boolean
    displayOrder: Int
    propertyGroupId: String!
    widgets: [AnyWidget!]!
}

type PropertyWidget implements IWidget {
    type: String!
    label: String
    hideLabel: Boolean
    displayOrder: Int
    propertyId: String
}

type LayoutResponse {
    layouts: [Layout!]!
    properties: [Property!]!
}

type Layout {
    id: ID!
    entityType: String!
    templateName: String!
    containers: [Container!]!
}

type Container {
    templateRegion: String!
    type: String
    widgets: [AnyWidget!]!
}

type Contact {
    id: ID!
    name: String!
    username: String!
    email: String!
}
